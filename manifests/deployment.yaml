apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
  labels:
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: node-red
    app.kubernetes.io/version: "3.1.3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-red
      app.kubernetes.io/instance: node-red
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-red
        app.kubernetes.io/instance: node-red
    spec:
      serviceAccountName: node-red
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - env:
          - name: METHOD
            value: watch
          - name: SLEEP_TIME_SIDECAR
            value: 5s
          - name: LABEL
            value: node-red-settings
          - name: LABEL_VALUE
            value: "1"
          - name: FOLDER
            value: /data
          - name: SCRIPT
            value: /app/flow_refresh.py
          - name: URL
            value: http://node-red.default.svc.cluster.local:1880
          
          image: "quay.io/kiwigrid/k8s-sidecar:1.25.3"
          imagePullPolicy: IfNotPresent
          name: node-red-sidecar
          volumeMounts:
            - mountPath: /data
              name: data
            - name: flow-refresh-script
              mountPath: /app/flow_refresh.py
              subPath: flow_refresh.py
        - name: node-red
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 10003
            runAsNonRoot: true
            runAsUser: 10003
            seccompProfile:
              type: RuntimeDefault
          image: "docker.io/nodered/node-red:3.1.7"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits:
              cpu: 500m
              memory: 5123Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: flow-refresh-script
          configMap:
            name: node-red-flow-refresh-cm
            defaultMode: 0777
        - name: data
          emptyDir: { }
          
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values: 
                - futro1
      tolerations:
        - key: edgefarm.io
          operator: Exists
      terminationGracePeriodSeconds: 30
